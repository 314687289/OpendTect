#!/bin/csh -f

set mods=.mods
set shallow=no
set dodeps=yes
set doupd=yes
set dodoc=no
set nrcpus=1
set cmake=no

source $WORK/Pmake/base/PMinit.csh

if ( -e $WORK/CMakeModules/FindOpendTect.cmake ) then
    set cmake=yes
endif

if ( $?OD_PMAKE_NR_PROCESSORS ) then
	set nrcpus=$OD_PMAKE_NR_PROCESSORS
else if ( -x $WORK/bin/$PLFSUBDIR/GetNrProc ) then
	set nrcpus=`$WORK/bin/$PLFSUBDIR/GetNrProc`
else if ( -x $WORK/Pmake/base/bin/$HDIR/GetNrProc ) then
	set nrcpus=`$WORK/Pmake/base/bin/$HDIR/GetNrProc`
endif

parse_args:
if ( "$1" == "--shallow" ) then
    set shallow=yes
else if ( "$1" == "--cmake" ) then
    set cmake=yes
else if ( "$1" == "--nodep" ) then
    set dodeps=no
else if ( "$1" == "--mkdep" ) then
    set dodeps=yes
else if ( "$1" == "--noupd" ) then
    set doupd=no
else if ( "$1" == "--od" ) then
    set mods=.mods.od
else if ( "$1" == "--doc" ) then
    set dodoc=yes
else if ( "$1" == "--nrcpus" ) then
    set nrcpus=$2
    shift
else if ( "$1" == "--help" ) then
    echo "Usage: make_all [option]"
    echo " --shallow, Do not remove libs"
    echo " --nodep, Do not create deps"
    echo " --mkdep, Do create deps"
    echo " --noupd, Do not run 'dvs update'"
    echo " --od, Only make OpendTect"
    echo " --doc, Create ClassDoc"
    echo " --nrcpus number_of_cpus"
    exit 0
else
    goto do_it
endif

shift
goto parse_args

do_it:

set flags=""
if ( $nrcpus > 1 ) set flags="-j$nrcpus"

set logdir=$WORK/dtect/log
if ( ! -d $logdir ) then
    mkdir $logdir
endif

cdw
set oddir=$WORK:t
set dgbdir=`echo $oddir | sed 's/od/dgb/'`

if ( $shallow == no ) then
    if ( $cmake == no ) then
	cdl
	echo "Removing all libs from " `pwd`
	if ( $HDIR == win ) then
	    \rm *.lib
	    \rm *.dll
	    \rm *.dll.a
	else if ( $HDIR == mac ) then
	    \rm *.dylib
	    \rm *.a
	else
	    \rm *.a
	endif
	ln -s ../*.a .
    else
	cdw
	echo "Cleaning $oddir ..."
	make clean
	cd ../$dgbdir;
	echo "Cleaning $dgbdir ..."
	make clean
	cdw
    endif
endif

if ( $doupd == yes ) then
    cd ..
    echo "dvs update $oddir"
    cd $oddir; dvs update
    echo ""
    echo "dvs update $dgbdir"
    sleep 2;
    cd ../$dgbdir; dvs update
    cdw
endif

if ( $cmake == yes ) then
    set dodeps=no
endif

if ( $dodeps == yes ) then
    make $flags dep MODS=$mods
    cd plugins ; make $flags dep
    cd ../spec ; make $flags dep
    cd ..
endif

if ( $cmake == no ) then
    make $flags lib MODS=$mods
    make MODS=$mods
    cd plugins
    make $flags lib
    make
    cd ../spec
    make
else
    if ( ! -e CMakeCache.txt ) then
	cmake .
    endif
    make $flags
    cd ../$dgbdir
    if ( ! -e CMakeCache.txt ) then
	cmake .
    endif
    make $flags
    cdw
endif

programmer_doc:

if ( $dodoc == yes ) then
    if ( $cmake == no ) then
	cdw
	make doc MODS=.mods.od
	cd doc/Programmer/Generated
	./mk_paths_relative
	GenModDeps --html $WORK/Pmake/ModDeps.od index.html
    else
	cdw
	make doc
	cd ../$dgbdir
	make doc
	cdw
    endif
endif
