#!/bin/csh -f

set shallow=no
set doupd=yes
set dodoc=no
set nrcpus=1
set stoponerr=no

if ( $?OD_PMAKE_NR_PROCESSORS ) then
	set nrcpus=$OD_PMAKE_NR_PROCESSORS
else 
	set nrcpus=`$WORK/dtect/GetNrProc`
endif

parse_args:
if ( "$1" == "--shallow" ) then
    set shallow=yes
else if ( "$1" == "--noupd" ) then
    set doupd=no
else if ( "$1" == "--doc" ) then
    set dodoc=yes
else if ( "$1" == "--stoponerr" ) then
    set stoponerr=yes
else if ( "$1" == "--nrcpus" ) then
    set nrcpus=$2
    shift
else if ( "$1" == "--help" ) then
    echo "Usage: make_all [options]"
    echo " --shallow:   do not make clean before start"
    echo " --noupd:     Do not run 'dvs update'"
    echo " --stoponerr: stop on all error (i.e. don't add '-k' to make flags)"
    echo " --doc:       create classDoc"
    echo " --nrcpus:    force number of CPUs to use"
    exit 0
else
    goto do_it
endif

shift
goto parse_args

do_it:

set flags=""
if ( $nrcpus > 1 ) set flags="-j$nrcpus"
if ( $stoponerr != "yes" ) set flags="$flags -k"
echo ""; echo "make flags: $flags"; echo ""

set logdir=$WORK/dtect/log
if ( ! -d $logdir ) then
    mkdir $logdir
endif

alias cdw "cd $WORK"

cdw
set oddir=$WORK:t
set dgbdir=`echo $oddir | sed 's/od/dgb/'`

if ( $shallow == no ) then
    cdw
    echo "Cleaning $oddir ..."
    make clean
    cd ../$dgbdir;
    echo "Cleaning $dgbdir ..."
    make clean
    cdw
endif

if ( $doupd == yes ) then
    cd ..
    echo "dvs update $oddir"
    cd $oddir; dvs update
    echo ""
    echo "dvs update $dgbdir"
    sleep 2;
    cd ../$dgbdir; dvs update
    cdw
endif

if ( ! -e CMakeCache.txt ) then
    cmake .
endif
make $flags
cd ../$dgbdir
if ( ! -e CMakeCache.txt ) then
    cmake .
endif
make $flags
cdw

programmer_doc:

if ( $dodoc == yes ) then
    cdw
    make doc
    cd ../$dgbdir
    make doc
    cdw
endif
